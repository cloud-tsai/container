---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: cluster.local/nfs-client-provisioner
  name: yuanpeng-resources
  namespace: yuanpeng
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-client
  volumeMode: Filesystem

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: cluster.local/nfs-client-provisioner
  name: mysql56
  namespace: yuanpeng
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs-client
  volumeMode: Filesystem

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: yuanpeng-mysql56
  name: mysql56
  namespace: yuanpeng
spec:
  selector:
    matchLabels:
      app: yuanpeng-mysql56
  template:
    metadata:
      labels:
        app: yuanpeng-mysql56
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: yuanpeng
        - name: MYSQL_ROOT_PASSWORD
          value: root
        image: mysql:5.6
        imagePullPolicy: IfNotPresent
        name: mysql56
        ports:
        - containerPort: 3306
          name: mysql56port
          protocol: TCP
        stdin: true
        tty: true
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: vol1
      volumes:
      - name: vol1
        persistentVolumeClaim:
          claimName: mysql56

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: yuanpeng-platform
  name: tomcat-platform
  namespace: yuanpeng
spec:
  selector:
    matchLabels:
      app: yuanpeng-platform
  template:
    metadata:
      labels:
        app: yuanpeng-platform
    spec:
      containers:
      - image: harbor.billjc.com/library/tomcat-platform:v1.0
        imagePullPolicy: IfNotPresent
        name: tomcat-platform
        stdin: true
        tty: true
        volumeMounts:
        - mountPath: /data
          name: vol1
      - args:
        - nginx
        - -g
        - daemon off;
        - -c
        - /nginx/nginx.conf
        image: nginx:1.19.2
        imagePullPolicy: IfNotPresent
        name: platform-proxy
        stdin: true
        tty: true
        volumeMounts:
        - mountPath: /data
          name: vol1
        - mountPath: /nginx
          name: vol2
      volumes:
      - name: vol1
        persistentVolumeClaim:
          claimName: yuanpeng-resources
      - name: vol2
        configMap:
          defaultMode: 256
          name: yuanpeng-nginx-conf
          optional: false

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: yuanpeng-nginx-conf
  namespace: yuanpeng
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;
    #error_log  /var/log/nginx/error.log debug;
    error_log  /dev/stdout warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        client_max_body_size 512m;
        #log_format  main '[$time_local - $status] $remote_addr - $remote_user $request ($http_referer)';
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        #access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        #tcp_nopush     on;
        keepalive_timeout  65;
        #gzip  on;
        #include /etc/nginx/conf.d/*.conf;
        proxy_connect_timeout       10;
        proxy_read_timeout          180;
        proxy_send_timeout          5;
        proxy_buffering             off;
        proxy_cache_path            /tmp/nginx levels=1:2 keys_zone=my_zone:100m inactive=7d max_size=1g;

        server {
            listen 80;
            access_log      off;
            gzip            on;
            gzip_min_length 1k;
            gzip_comp_level 2;
            gzip_types      text/plain application/javascript application/x-javascript text/css application/xml text/javascript image/jpeg image/gif image/png;
            gzip_vary       on;
            gzip_disable    "MSIE [1-6]\.";
            proxy_set_header Host $host;
            location /platform {
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header REMOTE-HOST $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "Upgrade";
              proxy_set_header X-NginX-Proxy true;
              proxy_pass     http://localhost:8080;
            }
            location /platform/maintain.html {
                root /data;
            }
            location /platform/resources/cuttedpics/ {
                root /data;
            }
            location /platform/resources/kindeditor/ {
               root /data;
            }
            error_page 502 /platform/maintain.html;
        }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: mysql56
  namespace: yuanpeng
spec:
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: yuanpeng-mysql56
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: platform
  namespace: yuanpeng
spec:
  type: ClusterIP
  selector:
    app: yuanpeng-platform
  ports:
  - name: nginx-proxy
    port: 80
    protocol: TCP
    targetPort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: yuanpeng
  namespace: yuanpeng
spec:
  rules:
  - host: yuanpeng.billjc.com
    http:
      paths:
      - backend:
          serviceName: platform
          servicePort: 80
        path: /
